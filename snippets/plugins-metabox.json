{	
	"MetaBox | Adds main function to load MetaBox": {
		"prefix": "metafun",
		"body": [
			"add_filter( 'rwmb_meta_boxes', 'cmk_register_meta_boxes_${1:cpt}' );",
			"/**",
			" * Adds Metabox Function",
			" * Needs MetaBox to work: https://www.closemarketing.es/go/metabox/",
			" *",
			" * @param array \\$meta_boxes Metaboxes.",
			" * @return array \\$metaboxes",
			" */",
			"function cmk_register_meta_boxes_${1:cpt}( \\$meta_boxes ) {",
			"\t\\$prefix = '${1:cpt}_';",
			"",
			"\t// 2nd meta box",
			"\t\\$meta_boxes[] = array(",
			"\t\t'id'         => 'standard-${3:post-type}',",
			"\t\t'title'      => __( '${2:title-metabox}', '${5:textdomain}' ),",
			"\t\t'post_types' => array( '${3:post-type}' ),",
			"\t\t'context'    => '${4:orientation}', // side / normal. ",
			"\t\t'priority'   => 'high',",
			"\t\t'autosave'   => true,",
			"\t\t'fields'     => array(",
			"",
			"",
			"\t\t), // fields.",
			"\t);",
			"",
			"\treturn \\$meta_boxes;",
			"}"
		]
	},
	"MetaBox | Adds field select for posts": {
		"prefix": "metapost",
		"body": [
			"// * Get posts in array",
			"\\$posts_options = array();",
			"if ( is_admin() ) {",
			"\t\\$posts_options = get_transient( '${1:prefix}query_${2:post-type}_meta' );",
			"\tif ( ! \\$posts_options ) {",
			"\t\t\\$args_query    = array(",
			"\t\t\t'post_type'      => '${2:post-type}',",
			"\t\t\t'posts_per_page' => -1,",
			"\t\t\t'orderby'        => 'title', // menu_order, rand, date.",
			"\t\t\t'order'          => 'ASC',",
			"\t\t\t'fields'         => 'ids',",
			"\t\t);",
			"\t\t\\$posts_array   = get_posts( \\$args_query );",
			"\t\tforeach ( \\$posts_array as \\$post_id ) {",
			"\t\t\t\\$posts_options[ \\$post_id ] = get_the_title( \\$post_id );",
			"\t\t}",
			"\t\tset_transient( '${1:prefix}query_${2:post-type}_meta', \\$posts_options, MINUTE_IN_SECONDS * 3 );",
			"}",
			"",
			"// SELECT BOX post type ${2:post-type}.",
			"array(",
			"\t'name'        => 'Selecciona ${3:cpt-name}',",
			"\t'id'          => \"{\\$prefix}${2:post-type}\",",
			"\t'type'        => 'select',",
			"\t'options'     => \\$posts_options,",
			"\t'multiple'    => false,",
			"\t'std'         => '',",
			"\t'placeholder' => 'Selecciona ${3:cpt-name}',",
			"),"
		]
	},
	"MetaBox | Adds field select for terms": {
		"prefix": "metatax",
		"body": [
		  "// * Get terms in array",
		  "\\$terms_array = get_terms(",
		  "\tarray(",
		  "\t\t'taxonomy'   => '${1:taxonomy}',",
		  "\t\t'hide_empty' => false,",
		  "\t)",
		  ");",
		  "\\$terms_options = array();",
		  "foreach ( \\$terms_array as \\$term_single ) {",
		  "\t\\$terms_options[ \\$term_single->term_id ] = \\$term_single->name;",
		  "}",
		  "// Move to metabox",
		  "// SELECT BOX term ${1:taxonomy}.",
		  "array(",
		  "\t'name'        => __( '${1:title}', '${3:prefix-lang}' ),",
		  "\t'id'          => \"{\\$prefix}term_${1:taxonomy}\",",
		  "\t'type'        => 'select',",
		  "\t'options'     => \\$terms_options,",
		  "\t'multiple'    => false,",
		  "\t'std'         => '',",
		  "\t'placeholder' => '${3:Select Placeholder}',",
		  "),"
		],
		"description": "MetaBox | Adds field select for terms"
	},
	"MetaBox | Adds Field date": {
		"prefix": "metadate",
		"body": [
		  "// DATE.",
		  "array(",
		  "\t'name'       => __( '${1:title}', '${3:prefix-lang}' ),",
		  "\t'id'         => \"{\\$prefix}${2:field-name}\",",
		  "\t'type'       => 'date',",
		  "\t// jQuery date picker options. See here http://api.jqueryui.com/datepicker .",
		  "\t'js_options' => array(",
		  "\t\t'appendText'      => esc_html__( '(yyyy-mm-dd)', '${3:prefix-lang}' ),",
		  "\t\t'dateFormat'      => esc_html__( 'yy-mm-dd', '${3:prefix-lang}' ),",
		  "\t\t'changeMonth'     => true,",
		  "\t\t'changeYear'      => true,",
		  "\t\t'showButtonPanel' => true,",
		  "\t),",
		  "),"
		],
		"description": "MetaBox | Adds Field date"
	},
	"MetaBox | Adds field for Gallery": {
		"prefix": "metagal",
		"body": [
			"// GALLERY IMAGE ADVANCED.",
			"array(",
			"\t'name'             => __( '${1:title}', '${3:prefix-lang}' ),",
			"\t'id'               => \"{\\$prefix}${2:slug}\",",
			"\t'type'             => 'image_advanced',",
			"\t'force_delete'     => false,",
			"\t'max_file_uploads' => ${3:max-files},",
			"\t'max_status'       => false,",
			"),"
		]
	},
	"Metabox | Adds PDF File field": {
		"prefix": "metapdf",
		"body": [
		  "array(",
		  "\t'id'               => \"{\\$prefix}${1:id}\",",
		  "\t'name'             => __( '${2:title}', '${3:textdomain}' ),",
		  "\t'type'             => 'file_advanced',",
		  "\t'force_delete'     => false,",
		  "\t'max_file_uploads' => 1,",
		  "\t'mime_type'        => 'application/pdf',",
		  "\t'max_status'       => 'false', // Do not show how many files uploaded/remaining.",
		  "),"
		],
		"description": "Metabox | Adds PDF File field"
	},
	"MetaBox | Adds Icon field": {
		"prefix": "metaicon",
		"body": [
			"// ICON IMAGE ADVANCED.",
			"array(",
			"\t'name'             => 'Icono',",
			"\t'id'               => \"{\\$prefix}${3:slug}\",",
			"\t'type'             => 'image_advanced',",
			"\t'force_delete'     => false,",
			"\t'max_file_uploads' => 1,",
			"\t'max_status'       => false,",
			"),"
		]
	},
	"MetaBox | Adds Number field": {
		"prefix": "metanum",
		"body": [
			"// NUMBER.",
			"array(",
			"\t'name' => __( '${1:title}', '${4:textdomain}' ),",
			"\t'id'   => \"{\\$prefix}${2:slug}\",",
			"\t'type' => 'number',",
			"\t'min'  => 0,",
			"\t'step' => ${3:step},",
			"),"
		]
	},
	"MetaBox | Adds select field": {
		"prefix": "metasel",
		"body": [
			"// SELECT BOX.",
			"array(",
			"\t'name'        => __( '${1:title}', '${5:textdomain}' ),",
			"\t'id'          => \"{\\$prefix}select\",",
			"\t'type'        => 'select',",
			"\t'options'     => array(",
			"\t\t'${2:value1}' => __( '${3:text1}', '${5:textdomain}' ),",
			"\t),",
			"\t// Select multiple values, optional. Default is false.",
			"\t'multiple'    => false,",
			"\t'std'         => '',",
			"\t'placeholder' => __( '${4:text-placeholder}', '${5:textdomain}' ),",
			"),"
		]
	},
	"MetaBox | Adds text field": {
		"prefix": "metatext",
		"body": [
			"// TEXT.",
			"array(",
			"\t'name'              => __( '${1:title}', '${5:textdomain}' ),",
			"\t'label_description' => __( '${2:descripcion-label}', '${5:textdomain}' ),",
			"\t'id'                => \"{\\$prefix}${3:slug}\",",
			"\t'desc'              => __( '${4:descripcion}', '${5:textdomain}' ),",
			"\t'type'              => 'text',",
			"\t'std'               => '',",
			"\t'clone'             => false,",
			"),"
		]
	},
	"MetaBox | Adds URL Field": {
		"prefix": "metaurl",
		"body": [
			"// URL.",
			"array(",
			"\t'name' => __( '${1:title}', '${5:textdomain}' ),",
			"\t'id'   => \"{\\$prefix}${3:slug}\",",
			"\t'desc' => '${4:descripcion}',",
			"\t'type' => 'url',",
			"\t'std'  => '',",
			"),"
		]
	},
	"MetaBox | Get actual post in filter function": {
		"prefix": "metapid",
		"body": [
			"if ( isset( \\$_GET['post'] ) ) {",
			"\t\\$post_id = intval( \\$_GET['post'] );",
			"} elseif ( isset( \\$_POST['post_ID'] ) ) {",
			"\t\\$post_id = intval( \\$_POST['post_ID'] );",
			"} else {",
			"\t\\$post_id = false;",
			"\t\\$post_edit_parent = 0;",
			"}",
			"if ( \\$post_id ) {",
			"\t\\$post_edit_id = (int) \\$post_id;",
			"\t\\$post_edit = get_post( \\$post_edit_id );",
			"\t\\$post_edit_parent = \\$post_edit->post_parent;",
			"}"
		],
		"description": "MetaBox | Get actual post in filter function"
	},
	"MetaBox | Adds Checkbox field": {
		"prefix": "metachec",
		"body": [
			"// CHECKBOX.",
			"array(",
			"\t'name'  => __( '${1:title}', '${3:textdomain}' ),",
			"\t'id'    => \"{\\$prefix}${2:slug}\",",
			"\t'type'  => 'checkbox',",
			"\t'std'   => 0, // Value can be 0 or 1.", 
			"),"
		]
	},

	"MetaBox | Adds Address group fields": {
		"prefix": "metadir",
		"body": [
			"// TEXT.",
			"array(",
			"\t'name'    => __('Address', '${1:slug-translation}'),",
			"\t'id'      => \"{\\$$prefix}dir1\",",
			"\t'type'    => 'text',",
			"\t'clone'   => false,",
			"\t'columns' => 3,",
			"),",
			"// TEXT.",
			"array(",
			"\t'name'    => __('Address 2', '${1:slug-translation}'),",
			"\t'id'      => \"{\\$$prefix}dir2\",",
			"\t'type'    => 'text',",
			"\t'clone'   => false,",
			"\t'columns' => 3,",
			"),",
			"// TEXT.",
			"array(",
			"\t'name'    => __('ZIP', '${1:slug-translation}'),",
			"\t'id'      => \"{\\$$prefix}zip\",",
			"\t'type'    => 'text',",
			"\t'clone'   => false,",
			"\t'columns' => 3,",
			"),",
			"// TEXT.",
			"array(",
			"\t'name'    => __('City', '${1:slug-translation}'),",
			"\t'id'      => \"{\\$$prefix}city\",",
			"\t'type'    => 'text',",
			"\t'clone'   => false,",
			"\t'columns' => 3,",
			"),",
			"// TEXT.",
			"array(",
			"\t'name'    => __('State', '${1:slug-translation}'),",
			"\t'id'      => \"{\\$$prefix}state\",",
			"\t'type'    => 'text',",
			"\t'clone'   => false,",
			"\t'columns' => 3,",
			"),",
			"// TEXT.",
			"array(",
			"\t'name'    => __('Phone number', '${1:slug-translation}'),",
			"\t'id'      => \"{\\$$prefix}tel\",",
			"\t'type'    => 'text',",
			"\t'clone'   => false,",
			"\t'columns' => 3,",
			"),",
			"// URL.",
			"array(",
			"\t'name'    => __('URL', '${1:slug-translation}'),",
			"\t'id'      => \"{\\$$prefix}url\",",
			"\t'desc'    => __('Web Page', 'your-prefix'),",
			"\t'type'    => 'url',",
			"\t'columns' => 3,",
			"),",
			"// TEXT.",
			"array(",
			"\t'name'  => __('ID Google My Business', '${1:slug-translation}'),",
			"\t'id'    => \"{\\$$prefix}gbusiness\",",
			"\t'desc'  => '<a href=\"https://developers.google.com/maps/documentation/javascript/examples/places-placeid-finder?hl=es-419\" target=\"_blank\">In order to Generate the ID</a>',",
			"\t'type'  => 'text',",
			"\t'clone' => false,",
			"),"
		]
	},
	"MetaBox | Get Select Field of actual Forms in Gravity Forms": {
		"prefix": "metafor",
		"body": [
			"//* Gets the forms in array",
			"\\$forms = GFAPI::get_forms();",
			"\\$forms_options = array();",
			"foreach( \\$forms as \\$form ):",
			"\t\\$forms_options[\\$form['id']] = \\$form['id'].' - '.\\$form['title'];",
			"endforeach;",
			"",
			"",
			"// SELECT BOX Forms.",
			"array(",
			"\t'name'        => 'Selecciona Formulario',",
			"\t'id'          => \"{\\$prefix}${1:slug}\",",
			"\t'type'        => 'select',",
			"\t'options'     => \\$forms_options,",
			"\t'multiple'    => false,",
			"\t'std'         => '',",
			"\t'placeholder' => 'Selecciona un formulario',",
			"),"
		]
	},
	"MetaBox | Get Select Field of actual Forms in WPFORMS": {
		"prefix": "metafwp",
		"body": [
		  "//* Gets the forms in array WPFORMS",
		  "\\$args = array(",
		  "\t'post_type'      => 'wpforms',",
		  "\t'post_status'    => 'publish',",
		  "\t'posts_per_page' => -1,",
		  ");",
		  "\\$forms_options = array();",
		  "\\$forms = wpforms()->form->get();",
		  "if ( is_array( \\$forms ) ) {",
		  "\tforeach( \\$forms as \\$form ) {",
		  "\t\t\\$forms_options[ \\$form->ID ] = \\$form->ID . ' - ' . \\$form->post_title;",
		  "\t}",
		  "}",
		  "// SELECT BOX Forms.",
		  "array(",
		  "\t'name'        => '${2:Title of meta}',",
		  "\t'id'          => \"{\\$prefix}${1:slug}\",",
		  "\t'type'        => 'select_advanced',",
		  "\t'options'     => \\$forms_options,",
		  "\t'multiple'    => false,",
		  "\t'std'         => '',",
		  "\t'placeholder' => '${2:Title of meta}',",
		  "),",
		  "",
		  "  "
		],
		"description": "Get Select Field of actual Forms in WPFORMS"
	    }
	"MetaBox | Shows Gallery in public page": {
		"prefix": "metsimg",
		"body": [
			"/**",
			" * Shows metabox image in public",
			" * Needs MetaBox to work: https://www.closemarketing.es/go/metabox/",
			" */",
			"\\$images = rwmb_meta( '${1:meta_key}', 'size=${2:image_size}' ); ",
			"",
			"if ( ! empty( \\$images ) ) {",
			"\tforeach ( \\$images as \\$image ) {",
			"\t\techo '<img src=\"' . esc_url( \\$image['url'] ) . '\" alt=\"' . esc_html( \\$image['alt'] ) . '\" width=\"' . esc_html( \\$image['width'] ) . '\" height=\"' . esc_html( \\$image['height'] ) . '\" /></a>';",
			"\t}",
			"}"
		]
	},"Metabox | Shows file download": {
		"prefix": "metsfi",
		"body": [
		  "/**",
		  " * Shows metabox file in public",
		  " * Needs MetaBox to work: https://www.closemarketing.es/go/metabox/",
		  " */",
		  "\\$${1:metabox_variable}s = rwmb_meta( '${1:metabox_variable}' );",
		  "foreach ( $${1:metabox_variable}s as $${1:metabox_variable} ) {",
		  "\techo '<a href=\"' . esc_url( $${1:metabox_variable}['url'] ) . '\">' . esc_html( $${1:metabox_variable}['name'] ) . '</a>';",
		  "}"
		],
		"description": "Metabox | Shows file download"
	},
	"MetaBox Blocks | Registers a new block": {
		"prefix": "metabab",
		"body": [
			"add_filter( 'rwmb_meta_boxes', '${1:prefix}_register_block_${2:slug}' );",
			"/**",
			" * Registers the block ${3:Title of Block}",
			" * Needs MetaBox Blocks to work: https://www.closemarketing.es/go/metablocks/",
			" *",
			" * @param  array \\$meta_boxes Array of registered metaboxes.",
			" * @return array \\$meta_boxes",
			" */",
			"function ${1:prefix}_register_block_${2:slug}( \\$meta_boxes ) {",
			"\t\\$meta_boxes[] = [",
			"\t\t'title'           => '${3:Title of Block}',",
			"\t\t'id'              => '${2:slug}',",
			"\t\t'description'     => '${4:Description}',",
			"\t\t'type'            => 'block',",
			"\t\t'icon'            => 'awards', // More: https://developer.wordpress.org/resource/ .",
			"\t\t'category'        => 'layout', // Options: common, formatting, widgets, embed .",
			"\t\t'context'         => 'side',",
			"\t\t'keywords'        => [",
			"\t\t\t'${5:keyword1}',",
			"\t\t\t'${6:keyword2}',",
			"\t\t\t'${7:keyword3}',",
			"\t\t],",
			"\t\t// * In template directory",
			"\t\t'render_template' => get_template_directory() . '/blocks/${2:slug}/template.php',",
			"\t\t'enqueue_style'   => get_template_directory_uri() . '/blocks/${2:slug}/style.css',",
			"\t\t/* In Plugins",
			"\t\t'render_template' => plugin_dir_path( __FILE__ ) . 'template.php',",
			"\t\t'enqueue_style'   => plugin_dir_url( __FILE__ ) . 'style.css',",
			"\t\t*/",
			"\t\t'supports'        => array(",
			"\t\t\t'align'           => [",
			"\t\t\t\t'wide',",
			"\t\t\t\t'full',",
			"\t\t\t],",
			"\t\t\t'customClassName' => true,",
			"\t\t\t'anchor'          => false,",
			"\t\t),",
			"",
			"\t\t// Block fields.",
			"\t\t'fields'          => [",
			"\t\t\t[",
			"\t\t\t\t'type' => 'single_image',",
			"\t\t\t\t'id'   => 'image',",
			"\t\t\t\t'name' => 'Image',",
			"\t\t\t],",
			"\t\t\t[",
			"\t\t\t\t'type' => 'text',",
			"\t\t\t\t'id'   => 'title',",
			"\t\t\t\t'name' => 'Title',",
			"\t\t\t],",
			"\t\t\t[",
			"\t\t\t\t'type' => 'text',",
			"\t\t\t\t'id'   => 'subtitle',",
			"\t\t\t\t'name' => 'Subtitle',",
			"\t\t\t],",
			"\t\t\t[",
			"\t\t\t\t'type' => 'textarea',",
			"\t\t\t\t'id'   => 'content',",
			"\t\t\t\t'name' => 'Content',",
			"\t\t\t],",
			"\t\t\t[",
			"\t\t\t\t'type' => 'single_image',",
			"\t\t\t\t'id'   => 'signature',",
			"\t\t\t\t'name' => 'Signature',",
			"\t\t\t],",
			"\t\t\t[",
			"\t\t\t\t'type' => 'text',",
			"\t\t\t\t'id'   => 'button_text',",
			"\t\t\t\t'name' => 'Button Text',",
			"\t\t\t],",
			"\t\t\t[",
			"\t\t\t\t'type' => 'text',",
			"\t\t\t\t'id'   => 'button_url',",
			"\t\t\t\t'name' => 'Button URL',",
			"\t\t\t],",
			"\t\t\t[",
			"\t\t\t\t'type' => 'color',",
			"\t\t\t\t'id'   => 'background_color',",
			"\t\t\t\t'name' => 'Background Color',",
			"\t\t\t],",
			"\t\t],",
			"\t];",
			"\treturn \\$meta_boxes;",
			"}"
		],
		"description": "MetaBox Blocks | Registers a new block"
	},
	"MetaBox Blocks | Template PHP for block": {
		"prefix": "metabat",
		"body": [
			"/**",
			" * Block Template ${1:title}",
			" * Needs MetaBox Blocks to work: https://www.closemarketing.es/go/metablocks/",
			" *",
			" * @package    WordPress",
			" * @author     ${2:Author name} <${3:Author email}>",
			" * @copyright  ${4:Year} ${5:Company}",
			" * @version    ${6:version}",
			" */",
			"",
			"// Fields data.",
			"if ( empty( \\$attributes['data'] ) ) {",
			"\treturn;",
			"}",
			"",
			"// Unique HTML ID if available.",
			"\\$block_id = 'wpblock-${7:block_slug}-' . ( \\$attributes['id'] ?? '' );",
			"if ( ! empty( \\$attributes['anchor'] ) ) {",
			"\t\\$block_id = \\$attributes['anchor'];",
			"}",
			"",
			"// Custom CSS class name.",
			"\\$class = 'wpblock-${7:block_slug} ' . ( \\$attributes['className'] ?? '' );",
			"// Use \\$post_id and regular functions.",
			"?>",
			"<div id=\"<?php echo esc_html( \\$block_id ); ?>\" class=\"<?php echo esc_html( \\$class ); ?>\">",
			"</div>"
		],
		"description": "MetaBox Blocks | Template PHP for block"
	},
	"Metabox Blocks | Gets block Field": {
		"prefix": "mebaf",
		"body": [
		  "// Gets Block field ${1:field_key}.",
		  "\\$${1:field_key} = mb_get_block_field( '${1:field_key}' );",
		  ""
		],
		"description": "Metabox Blocks | Gets block Field"
	    }
}