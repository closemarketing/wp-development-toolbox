{
	"Gutenberg | Functions init for a theme": {
		"prefix": "gutain",
		"body": [
			"",
			"/**",
			" * # Gutenberg - Visual Editor",
			" * ---------------------------------------------------------------------------------------------------- */",
			"",
			"// Add support for full and wide align images.",
			"add_theme_support( 'align-wide' );",
			"",
			"add_action( 'enqueue_block_editor_assets', '${1:prefix}_gutenberg_editor_scripts' );",
			"/**",
			" * Hook scripts function into block editor hook",
			" *",
			" * @return void",
			" */",
			"function ${1:prefix}_gutenberg_editor_scripts() {",
			"",
			"\t// Add support for editor styles.",
			"\tadd_theme_support( 'editor-styles' );",
			"",
			"\t// Enqueue editor styles.",
			"\tadd_editor_style( 'style-editor.css' );",
			"}",
			"",
			"// Adds default style",
			"add_theme_support( 'wp-block-styles' );",
			"",
			"add_action( 'after_setup_theme', '${1:prefix}_setup_theme_supported_features' );",
			"/**",
			" * Colour setup for the theme",
			" *",
			" * @return void",
			" */",
			"function ${1:prefix}_setup_theme_supported_features() {",
			"\tadd_theme_support(",
			"\t\t'editor-color-palette',",
			"\t\tarray(",
			"\t\t\tarray(",
			"\t\t\t\t'name' => '',",
			"\t\t\t\t'slug' => '',",
			"\t\t\t\t'color' => '', // Hexadecimal value.",
			"\t\t\t),",
			"\t\t)",
			"\t);",
			"}"
		],
		"description": "Gutenberg | Functions init for a theme"
	},
	"Gutenberg | Set Color Palette": {
		"prefix": "gutacol",
		"body": [
			"add_action( 'after_setup_theme', '${1:prefix}_gutenberg_color_palette' );",
			"/**",
			" * Add support for custom color palettes in Gutenberg.",
			" */",
			"function ${1:prefix}_gutenberg_color_palette() {",
			"\tadd_theme_support(",
			"\t\t'editor-color-palette', array(",
			"\t\t\tarray(",
			"\t\t\t\t'name'  => esc_html__( 'Black', '${2:text-domain}' ),",
			"\t\t\t\t'slug'  => 'black',",
			"\t\t\t\t'color' => '#2a2a2a',",
			"\t\t\t),",
			"\t\t\tarray(",
			"\t\t\t\t'name'  => esc_html__( 'Gray', '${2:text-domain}' ),",
			"\t\t\t\t'slug'  => 'gray',",
			"\t\t\t\t'color' => '#727477',",
			"\t\t\t)",
			"\t\t)",
			"\t);",
			"}"
		],
		"description": "Gutenberg | Set Color Palette"
	},
	"Gutenberg | Add Theme support Wide align images": {
		"prefix": "gutafwi",
		"body": [
			"// Add support for full and wide align images.",
			"add_theme_support( 'align-wide' );"
		],
		"description": "Gutenberg | Add Theme support Wide align images"
	},
	"Gutenberg | Adds Gutenberg support to a registered post type": {
		"prefix": "gutacpt",
		"body": [
		  "add_filter( 'register_post_type_args', '${1:prefix}_gutenberg_filter_cpt', 10, 2 );",
		  "/**",
		  " * Filter the Products CPT to register more options.",
		  " *",
		  " * @param $args       array    The original CPT args.",
		  " * @param $post_type  string   The CPT slug.",
		  " *",
		  " * @return array",
		  " */",
		  "function ${1:prefix}_gutenberg_filter_cpt( $args, $post_type ) {",
		  "\t// If not Products CPT, bail.",
		  "\tif ( '${2:cpt-slug}' !== $post_type ) {",
		  "\t\treturn $args;",
		  "\t}",
		  "\t// Add additional Products CPT options.",
		  "\t$array_args = array(",
		  "\t\t'show_in_rest' => true,",
		  "\t);",
		  "\t// Merge args together.",
		  "\treturn array_merge( $args, $array_args );",
		  "}"
		],
		"description": "Gutenberg | Adds Gutenberg support to a registered post type"
	},
	"gutrfont": {
		"prefix": "Removes Noto Font from Frontend in Gutenberg",
		"body": [
		  "add_filter( 'gettext_with_context', 'my_remove_gutenberg_styles', 10, 4 );",
		  "/**",
		  " * Removes Noto Font in frontend of Gutenberg",
		  " *",
		  " * @param string $translation Translation.",
		  " * @param string $text Text to translate.",
		  " * @param string $context Context.",
		  " * @param string $domain Domain of context.",
		  " * @return $translation",
		  " */",
		  "function my_remove_gutenberg_styles( $translation, $text, $context, $domain ) {",
		  "	if ( 'Google Font Name and Variants' !== $context || 'Noto Serif:400,400i,700,700i' !== $text ) {",
		  "		return $translation;",
		  "	}",
		  "	return 'off';",
		  "}"
		],
		"description": "gutrfont"
	    },
	"Gutenberg | Name Image Sizes": {
		"prefix": "gutaim",
		"body": [
			"add_filter( 'image_size_names_choose', '${1:prefix}_custom_sizes' );",
			"function ${1:prefix}_custom_sizes( $sizes ) {",
			"\treturn array_merge( $sizes,",
			"\t\tarray(",
			"\t\t\t'${2:name-image-size}' => '${2:name-image-size}',",
			"\t\t\t'${3:name-image-size}' => '${3:name-image-size}',",
			"\t\t)",
			"\t);",
			"}"
		],
		"description": "Gutenberg | Name Image Sizes"
	},
	"Gutenberg | Adds Gradient Presets": {
		"prefix": "gutagr",
		"body": [
		  "add_theme_support(",
		  "\t'editor-gradient-presets',",
		  "\tarray(",
		  "\t\tarray(",
		  "\t\t'name'     => __( 'Vivid cyan blue to vivid purple', 'themeLangDomain' ),",
		  "\t\t'gradient' => 'linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%)',",
		  "\t\t'slug'     => 'vivid-cyan-blue-to-vivid-purple'",
		  "\t\t),",
		  "\t\tarray(",
		  "\t\t'name'     => __( 'Vivid green cyan to vivid cyan blue', 'themeLangDomain' ),",
		  "\t\t'gradient' => 'linear-gradient(135deg,rgba(0,208,132,1) 0%,rgba(6,147,227,1) 100%)',",
		  "\t\t'slug'     =>  'vivid-green-cyan-to-vivid-cyan-blue',",
		  "\t\t),",
		  "\t\tarray(",
		  "\t\t'name'     => __( 'Light green cyan to vivid green cyan', 'themeLangDomain' ),",
		  "\t\t'gradient' => 'linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%)',",
		  "\t\t'slug'     => 'light-green-cyan-to-vivid-green-cyan',",
		  "\t\t),",
		  "\t\tarray(",
		  "\t\t'name'     => __( 'Luminous vivid amber to luminous vivid orange', 'themeLangDomain' ),",
		  "\t\t'gradient' => 'linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%)',",
		  "\t\t'slug'     => 'luminous-vivid-amber-to-luminous-vivid-orange',",
		  "\t\t),",
		  "\t\tarray(",
		  "\t\t'name'     => __( 'Luminous vivid orange to vivid red', 'themeLangDomain' ),",
		  "\t\t'gradient' => 'linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%)',",
		  "\t\t'slug'     => 'luminous-vivid-orange-to-vivid-red',",
		  "\t\t),",
		  "\t)",
		  ");"
		],
		"description": "Gutenberg | Adds Gradient Presets"
	},
	"Gutenberg | Disable Custom Gradients": {
		"prefix": "gutrgr",
		"body": [
		  "// * Disable custom gradients.",
		  "add_theme_support( 'disable-custom-gradients' );"
		],
		"description": "Gutenberg | Disable Custom Gradients"
	}
}