{
	"WordPress | Gulp File in theme": {
		"prefix": "glag",
		"body": [
			"/**",
			" * GULP Workflow for themes.",
			" *",
			" * This file adds Gulp tasks to the theme.",
			" *",
			" * @author Closemarketing",
			" */",
			"",
			"// Require our dependencies.",
			"const browserSync = require('browser-sync').create();",
			"const cleancss = require('gulp-clean-css');",
			"const gulp = require('gulp');",
			"const pixrem = require('gulp-pixrem');",
			"const imagemin = require('gulp-imagemin');",
			"const minify = require('gulp-minify');",
			"const plumber = require('gulp-plumber');",
			"const notify = require('gulp-notify');",
			"",
			"// Project specific variables - CHANGE THESE",
			"const siteName = '${1:url}'; // set your siteName here",
			"",
			"/**",
			" * Error handling",
			" *",
			" * @function",
			" */",
			"function handleErrors() {",
			"\tconst args = Array.prototype.slice.call(arguments);",
			"",
			"\tnotify",
			"\t\t.onError({",
			"\t\t	title: 'Task Failed [<%= error.message %>]',",
			"\t\t	message:",
			"\t\t		'<%= error %> - See console or enable logging in the plugin.'",
			"\t\t})",
			"\t\t.apply(this, args);",
			"",
			"\t// Prevent the 'watch' task from stopping",
			"\tthis.emit('end');",
			"}",
			"",
			"/*******************",
			" * JavaScript Tasks",
			" *******************/",
			"",
			"/**",
			" * JavaScript Task Handler.",
			" */",
			"gulp.task('js', () => {",
			"\tgulp",
			"\t\t.src(['!./js/*.min.js', './js/*.js'])",
			"",
			"\t\t// Error handling.",
			"\t\t.pipe(",
			"\t\t	plumber({",
			"\t\t		errorHandler: handleErrors",
			"\t\t	})",
			"\t\t)",
			"",
			"\t\t// Minify JavaScript.",
			"\t\t.pipe(",
			"\t\t	minify({",
			"\t\t		ext: {",
			"\t\t			src: '.js',",
			"\t\t			min: '.min.js'",
			"\t\t		},",
			"\t\t		noSource: true",
			"\t\t	})",
			"\t\t)",
			"\t\t.pipe(gulp.dest('js'))",
			"",
			"\t\t// Inject changes via browserSync.",
			"\t\t.pipe(",
			"\t\t	browserSync.reload({",
			"\t\t		stream: true",
			"\t\t	})",
			"\t\t)",
			"});",
			"",
			"/**********************",
			" * All Tasks Listeners",
			" *********************/",
			"",
			"/**",
			" * Reload browser for PHP & JS file changes and inject CSS changes.",
			" *",
			" * https://browsersync.io/docs/gulp",
			" */",
			"gulp.task('watch', () => {",
			"\tbrowserSync.init({",
			"\t\tproxy: `http://${siteName}`,",
			"\t\thost: siteName,",
			"\t\topen: 'external',",
			"\t\tport: 8000",
			"\t});",
			"",
			"\t// Watch JavaScript Files. The task tries to inject changes into the browser. If that's not possible, it reloads the browser.",
			"\tgulp.watch(['./js/*.js', '!./js/*.min.js'], ['scripts']);",
			"",
			"\t// Get changes in style",
			"\tgulp",
			"\t.watch([",
			"\t\t'./style.css'",
			"\t])",
			"\t.on('change', browserSync.reload);",
			"",
			"\t// Watch PHP files and reload the browser if there is a change. Add directories if needed.",
			"\tgulp",
			"\t\t.watch([",
			"\t\t	'./*.php',",
			"\t\t	'./lib/*.php',",
			"\t\t	'./lib/**/*.php',",
			"\t\t	'./widgets/*.php'",
			"\t\t])",
			"\t\t.on('change', browserSync.reload);",
			"});",
			"",
			"/********************",
			" * Individual tasks.",
			" *******************/",
			"gulp.task('scripts', ['js']);",
			"",
			"gulp.task('images', () =>",
			"    gulp.src('./images/*')",
			"        .pipe(imagemin())",
			"        .pipe(gulp.dest('./images/dist'))",
			");",
			"",
			"gulp.task('default', ['watch'], () => {",
			"\tgulp.start('scripts');",
			"});",
			""
		],
		"description": "WordPress | Gulp File in theme"
	},
	"WordPress jQuery | Include JS in file Header": {
		"prefix": "jsah",
		"body": [
		  "jQuery( function($) {",
		  "",
		  "});"
		],
		"description": "WordPress jQuery | Include JS in file Header"
	},
	"WordPress | Javascript load window": {
		"prefix": "wpajl",
		"body": [
		  "document.addEventListener(\"DOMContentLoaded\", function(event) {",
		  "    //code to use after load window",
		  "});"
		],
		"description": "WordPress | Javascript load window"
	 }
}